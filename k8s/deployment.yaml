apiVersion: v1
kind: Service
metadata:
  name: alethic-ism-query-api-service
  namespace: alethic
spec:
  selector:
    app: alethic-ism-query-api
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-alethic-ism-query-api
  namespace: alethic
  annotations:
    #    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://ism.quantumwake.io, http://localhost:3000"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-max-age: "600"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, DELETE"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    # WebSocket Annotations
    nginx.org/websocket-services: "alethic-ism-query-api-service"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
spec:
  tls:
    - hosts:
        - api.ism.quantumwake.io
      secretName: api.ism.quantumwake.io
  rules:
    - host: api.ism.quantumwake.io
      http:
        paths:
          - path: /query/(.*)
            pathType: Prefix
            backend:
              service:
                name: alethic-ism-query-api-service
                port:
                  number: 80
  ingressClassName: nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alethic-ism-query-api-deployment
  namespace: alethic
spec:
  replicas: 1 
  selector:
    matchLabels:
      app: alethic-ism-query-api
  template:
    metadata:
      labels:
        app: alethic-ism-query-api
    spec:
      volumes:
        - name: alethic-ism-routes-secret-volume
          secret:
            secretName: alethic-ism-routes-secret
            items:
              - key: .routing.yaml
                path: .routing.yaml
        - name: alethic-ism-query-api-secret-config-volume
          secret:
            secretName: alethic-ism-query-api-secret
            items:
              - key: .firebase-credentials.json
                path: .firebase-credentials.json
      containers:
      - name: alethic-ism-query-api
        image: <IMAGE>
        imagePullPolicy: Always
        volumeMounts:
          - name: alethic-ism-routes-secret-volume
            mountPath: /app/repo/.routing.yaml
            subPath: .routing.yaml
            readOnly: true
          - name: alethic-ism-query-api-secret-config-volume
            mountPath: /app/repo/.firebase-credentials.json
            subPath: .firebase-credentials.json
            readOnly: true
        env:
          - name: NATS_URL
            valueFrom:
              secretKeyRef:
                name: alethic-ism-query-api-secret
                key: NATS_URL
          - name: ROUTING_FILE
            valueFrom:
              secretKeyRef:
                name: alethic-ism-query-api-secret
                key: ROUTING_FILE
          - name: DSN
            valueFrom:
              secretKeyRef:
                name: alethic-ism-query-api-secret
                key: DSN
        ports:
        - containerPort: 8080
      imagePullSecrets:
      - name: regcred
