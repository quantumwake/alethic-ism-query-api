apiVersion: v1
kind: Service
metadata:
  name: alethic-ism-query-api-service
  namespace: alethic
spec:
  selector:
    app: alethic-ism-query-api
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-alethic-ism-query-api
  namespace: alethic
  annotations:
    #nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://ism.quantumwake.io, http://localhost:3000"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-max-age: "600"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, DELETE"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    # WebSocket Annotations
#    nginx.org/websocket-services: "alethic-ism-query-api-service"
#    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
#    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
#    nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
#    nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
spec:
  tls:
    - hosts:
        - api.ism.quantumwake.io
      secretName: api.ism.quantumwake.io
  rules:
    - host: api.ism.quantumwake.io
      http:
        paths:
          - path: /api/v1/query  # More explicit regex
            #pathType: ImplementationSpecific  # Instead of Prefix
          #- path: /query
            pathType: Prefix
            backend:
              service:
                name: alethic-ism-query-api-service
                port:
                  number: 8080
  ingressClassName: nginx
